                                LISA
             Large-selection Interface for Sampling Algorithms
===============================================================================


Author :       Michael D. Himes    University of Central Florida
Contact:       mhimes@knights.ucf.edu

Advisor:       Joseph Harrington   University of Central Florida

Contributors:  


Acknowledgements
----------------
This research was supported by the NASA Fellowship Activity under NASA Grant 
80NSSC20K0682.  We gratefully thank Nvidia Corporation for the Titan Xp GPU 
that was used throughout development of the software.


Summary
=======
LISA provides an interface for a variety of sampling algorithms.  Currently, 
the following sampling methods are available:
    DE-MC (ter Braak 2006), via a fork (https://github.com/mdhimes/mc3/tree/mpi)
                            of MC3 (https://github.com/pcubillos/mc3)
    DE-MC with snooker updates (ter Braak & Vrugt 2008), via MC3 fork
    MULTINEST (Feroz et al. 2009), via PyMultiNest (Buchner et al. 2014)
                                (https://github.com/JohannesBuchner/PyMultiNest)
    UltraNest (Buchner 2014, 2019; https://github.com/JohannesBuchner/UltraNest)

LISA comes with complete documentation as well as a user manual to assist 
in its usage.  Users can find the latest LISA User Manual at 
https://exosports.github.io/LISA/doc/LISA_User_Manual.html.

LISA is an open-source project that welcomes improvements from the community 
to be submitted via pull requests on Github.  To be accepted, such improvements 
must be generally consistent with the existing coding style, and all changes 
must be updated in associated documentation.

LISA is released under a Reproducible Research License.  Users are free to 
use the software for personal reasons.  Users publishing results from LISA 
or modified versions of it in a peer-reviewed journal are required to publicly 
release all necessary code/data to reproduce the published work.  Modified 
versions of LISA are required to also be released open source under the same 
Reproducible Research License.  For more details, see the text of the license.


Files & Directories
===================
LISA contains various files and directories, described here.

doc/            - Contains documentation for LISA.  The User Manual contains 
                  the information in the README with more detail, as well as a 
                  walkthrough for setup and running an example.
environment.yml - Contains the required packages for LISA.
example/        - Contains examples of executing LISA.
LISA.py         - The executable driver for LISA. Accepts a configuration file.
lib/            - Contains the wrappers for sampling algorithms.
  demc_wrapper.py      - Wrapper for MC3's DEMC algorithm.
  multinest_wrapper.py - Wrapper for PyMultiNest.
  snooker_wrapper.py   - Wrapper for MC3's snooker algorithm.
  ultranest_wrapper.py - Wrapper for UltraNest.
Makefile        - Handles building MC3.
modules/        - Contains submodules for some sampling algorithms.
  MCcubed       - MC3 package.
README          - This file!


Note that all .py files have complete documentation; consult a specific file 
for more details.


Installation
============
After recursively cloning the repo, users must compile MC3. 
Do so by entering
    make all
or
    make mc3
into the terminal.

To build the supplied conda environment, enter 
    conda env create -f environment.yml
and activate it:
    conda activate lisa

You are now ready to use LISA!


Executing LISA
===============
LISA is designed to be imported into existing projects.  The main LISA.py file 
contains a function, run(), which acts as the interface between a project 
and the Bayesian samplers.  Run takes 2 arguments: the sampling algorithm as 
a string (demc, dnest4, dynesty, snooker, multinest, or ultranest), 
and a dictionary of the parameters for the sampler.  It will then execute the 
inference, produce some plots, and return the posterior and best-fit 
parameters.  For details on the sampler parameters, see the user manual.

For examples of how to incorporate LISA into your project, see the example/ 
directory.


Versions
========
LISA was developed on a Unix/Linux machine using the following 
versions of packages:
 - Python 3.7.2
 - Numpy 1.16.2
 - Matplotlib 3.0.2
 - mpi4py 3.0.3
 - Scipy 1.5.0
 - MULTINEST 3.10
 - PyMultiNest 2.9
 - UltraNest 2.2.1
 - h5py 2.9.0
 - dynesty 1.0.1
 - dnest4 0.2.4


Be kind
=======
Please note that this software has not been officially released yet; see the 
license for some restrictions on its usage prior to release.  Upon release, 
we will add the relevant citation here, with a Bibtex entry.

Thanks!

